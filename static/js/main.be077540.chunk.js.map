{"version":3,"sources":["assets/mudassar-ali.jpg","assets/cool-cat.png","constants/SiteConfig.ts","components/Navigation.tsx","layout/Layout.tsx","components/Home.tsx","components/About.tsx","components/Contact.tsx","components/Article.tsx","components/Work.tsx","containers/App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","config","siteTitle","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","repo","pathPrefix","dateFromFormat","dateFormat","siteDescription","whoAm","homeDescription","siteRss","googleAnalyticsID","postDefaultCategoryID","newsletter","newsletterEmbed","userName","userEmail","userTwitter","userGitHub","userStackOverFlow","userLinkedIn","userFacebook","userInstagram","blog","menuLinks","name","link","themeColor","backgroundColor","replace","substr","slice","Navigation","props","navOnScroll","window","scrollY","setState","scrolled","state","addEventListener","this","removeEventListener","className","role","aria-label","id","to","src","AnimalAvatar","alt","map","key","Component","Layout","children","Home","Avatar","width","height","SiteConfig","href","icon","faCoffee","faGithub","faTwitter","About","rel","target","Contact","style","marginBottom","fontSize","textAlign","Article","Work","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be077540.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mudassar-ali.4d96b430.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cool-cat.62b7f00c.png\";","const config: Config = {\n    siteTitle: 'Mudassar Ali',\n    siteTitleShort: 'MD',\n    siteTitleAlt: 'Mudassar',\n    siteLogo: '/logos/logo-1024.png',\n    siteUrl: 'https://www.mudassarali.com',\n    repo: 'https://github.com/mudassar045/mudassarali.com',\n    pathPrefix: '',\n    dateFromFormat: '',\n    dateFormat: '',\n    siteDescription: 'Mudassar Ali is a full-stack Software Developer currently working with JavaScript and Elixir, changing imaginations into reality through code. A bit Open-Sourcer',\n    whoAm: 'A full-stack Software Developer & A Bit Open Sourcer',\n    homeDescription: 'I love to make Tools and OSS contributions to serve the different communities',\n    siteRss: '/rss.xml',\n    googleAnalyticsID: '',\n    postDefaultCategoryID: 'Tech',\n    newsletter: 'https://mudassarali.substack.com',\n    newsletterEmbed: 'https://mudassarali.substack.com/embed',\n    userName: 'MudassarAli',\n    userEmail: 'mudassar.ali@cerp.org.pk',\n    userTwitter: 'https://twitter.com/voidwebdev',\n    userGitHub: 'https://github.com/mudassar045',\n    userStackOverFlow: 'https://stackoverflow.com/mudassar045',\n    userLinkedIn: 'https://www.linkedin.com/in/mudassar-ali-045/',\n    userFacebook: 'https://web.facebook.com/mudassar045',\n    userInstagram: 'https://web.instagram/voidwebdev',\n    blog: 'https://voidweb.dev',\n    menuLinks: [\n      {\n        name: 'Home',\n        link: '/me/',\n      },\n      {\n        name: 'About',\n        link: '/about/',\n      },\n      {\n        name: 'Works',\n        link: '/works/',\n      },\n      {\n        name: 'Contact',\n        link: '/contact/',\n      },\n      {\n        name: 'Articles',\n        link: '/articles/',\n      },\n    ],\n    themeColor: '#3F80FF', // Used for setting manifest and progress theme colors.\n    backgroundColor: '#ffffff',\n  }\n  \n  // Make sure pathPrefix is empty if not needed\n  if (config.pathPrefix === '/') {\n    config.pathPrefix = ''\n  } else {\n    // Make sure pathPrefix only contains the first forward slash\n    config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, '')}`\n  }\n  \n  // Make sure siteUrl doesn't have an ending forward slash\n  if (config.siteUrl.substr(-1) === '/') config.siteUrl = config.siteUrl.slice(0, -1)\n  \n  // Make sure siteRss has a starting forward slash\n  if (config.siteRss && config.siteRss[0] !== '/') config.siteRss = `/${config.siteRss}`\n  \nexport default config\n  ","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport AnimalAvatar from '../assets/cool-cat.png'\n\nimport '../styles/main.css'\n\ninterface P {\n\tmenuLinks: MenuLink[]\n}\n\ninterface S {\n\tscrolled: boolean\n}\n\nclass Navigation extends Component<P, S> {\n\n    constructor(props: P) {\n        super(props)\n        this.state = {\n           scrolled: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.navOnScroll)\n    }\n    \n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.navOnScroll)\n    }\n    \n    navOnScroll = () => {\n        if (window.scrollY > 20) {\n          this.setState({ scrolled: true })\n        } else {\n          this.setState({ scrolled: false })\n        }\n    }\n\n    render() {\n        \n        const { menuLinks } = this.props\n\n        return(\n            <div className=\"hero-head\">\n                <div className=\"container\">\n                    <nav className=\"navbar has-shadow\" role=\"navigation\" aria-label=\"main navigation\">\n                    <div className=\"navbar-brand\">\n                        <Link id=\"cool-cat-btn\" className=\"navbar-item\" to=\"/\">\n                            <img src={AnimalAvatar} alt=\"cat\"/>\n                        </Link>\n                    </div>\n                    <div className=\"navbar-menu\">\n                        <div className=\"navbar-end\">   \n                        {\n                            menuLinks.map(link => (\n                                <Link className=\"navbar-item is-tab\" key={link.name} to={link.link}>{link.name}</Link>\n                            ))\n                        }\n                        </div>\n                    </div>\n                    </nav>\n                </div>\n            </div>\n            );\n    }\n}\n\nexport default Navigation\n","import React from 'react'\nimport config from '../constants/SiteConfig'\nimport Navigation from '../components/Navigation'\n\ntype PropsType = {\n    children: any\n}\n\nconst Layout = ({ children }: PropsType) => {\n\n    return(\n        <>\n            <Navigation menuLinks={ config.menuLinks }/>\n            { children }\n        </>\n    );\n}\n\nexport default Layout","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\nimport { faTwitter, faGithub } from '@fortawesome/free-brands-svg-icons'\nimport SiteConfig from '../constants/SiteConfig'\nimport Avatar from '../assets/mudassar-ali.jpg'\nimport Layout from '../layout/Layout'\n\nconst Home = () => {\n\n    return(\n        <Layout>\n            <section className=\"hero is-fullheight is-default\">\n                <div className=\"hero-body\">\n                    <div id=\"info-container\" className=\"container has-text-centered\">\n                        <div className=\"columns is-vcentered\">\n                            <div className=\"column is-two-thirds is-centered has-nice-link\">\n                                <div>\n                                    <img id=\"profile-pic\" src={Avatar} width=\"160\" height=\"160\" alt=\"avatar\"/>\n                                    <h1 className=\"title is-2\">{SiteConfig.userName}</h1>\n                                    <h2 className=\"subtitle is-4\">{SiteConfig.whoAm}</h2>\n                                    <p>{SiteConfig.homeDescription}</p>\n                                </div>\n                                <br/>\n                                <p className=\"has-text-centered\">\n                                    <a className=\"button is-large is-white\" href={SiteConfig.blog}>\n                                        <span className=\"icon\">\n                                            <FontAwesomeIcon icon={faCoffee} />\n                                        </span>\n                                        <span>Writings</span>\n                                    </a>\n                                    <a className=\"button is-large is-white\" href={SiteConfig.userGitHub}>\n                                        <span className=\"icon\">\n                                            <FontAwesomeIcon icon={faGithub} />\n                                        </span>\n                                        <span>Code</span>\n                                    </a>\n                                    <a className=\"button is-large is-white\" href={SiteConfig.userTwitter}>\n                                        <span className=\"icon\">\n                                            <FontAwesomeIcon icon={faTwitter} />\n                                        </span>\n                                        <span>Tweets</span>\n                                    </a>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Layout>\n        );\n}\n\nexport default Home","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport config from '../constants/SiteConfig'\nimport Layout from '../layout/Layout'\n\nconst About = () => {\n\n    return(\n        <Layout>\n            <section className=\"hero is-fullheight is-default\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <div className=\"columns is-vcentered is-centered is-text-centered\">\n                            <div className=\"column is-half is-narrow content\">\n                                <h1 id=\"about-mudassar\">About {config.userName}</h1>\n                                <p>I’m a full-stack Software Developer, working at <a href=\"https://labs.cerp.org.pk\" rel=\"noopener noreferrer\" target=\"_blank\">CERP Pakistan</a>. I started, my professional journey back in July, 2019.\n                                   Currently working on <a href='https://mischool.pk' rel=\"noopener noreferrer\" target=\"_blank\"> MISchool</a>. While working, I add new features and improve user experience. I'm also an avid participant\n                                   in several local and international open source projects on <a href={config.userGitHub} rel=\"noopener noreferrer\" target=\"_blank\">GitHub</a></p>\n                                <h3 id=\"more\">More</h3>\n                                <ul>\n                                    <li><a href=\"https://mudassarali.com/articles/about-me\">About Me Blog Post</a></li>\n                                </ul>\n                                <h3 id=\"links\">Links</h3>\n                                <ul>\n                                    <li><a href={config.userGitHub}>GitHub</a></li>\n                                    <li><a href={config.userStackOverFlow}>StackOverFlow</a></li>\n                                    <li><a href={config.userLinkedIn}>LinkedIn</a></li>\n                                    <li><a href={config.userTwitter}>Twitter</a></li>\n                                    <li><a href={config.userFacebook}>Facebook</a></li>\n                                    <li><a href={config.userInstagram}>Instagram</a></li>\n                                    <li><Link to=\"/contact\">Email</Link></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Layout>\n        );\n}\n\nexport default About","import React from 'react'\nimport Layout from '../layout/Layout'\nimport config from '../constants/SiteConfig'\n\nconst Contact = () => {\n    return(\n        <Layout>\n            <section className=\"hero is-fullheight is-default\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <div className=\"columns is-vcentered is-centered is-text-centered\" style={{marginBottom: 180}}>\n                            <div className=\"column is-half is-narrow content\">\n                                <h1 id=\"contact\">Contact</h1>\n                                <p>I value my time, so make it worth, and <a href=\"https://www.google.com/search?q=succinct+emails\">keep it succinct</a>.</p>\n                                <hr/>\n                                <p id=\"email\" style={{fontSize: 18, textAlign: \"center\"}}>\n                                    <a href={`mailto:${config.userEmail}`}>{config.userEmail}</a>\n                                </p>\n                                <hr/>\n                                <p>Please no support questions, job offers, questionnaires, etc.</p>\n                                <p>If the answer to your question could be interesting to others, consider asking in my <a href={`${config.userGitHub}/ama`}>AMA</a> instead.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Layout>\n        );\n}\n\nexport default Contact","import React, { Component } from 'react'\nimport Layout from '../layout/Layout'\n\nclass Article extends Component {\n\n    render() {\n\n    return(\n        <Layout>\n            <section className=\"hero\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <div className=\"columns is-vcentered is-centered is-text-centered\">\n                            <div className=\"column is-half is-narrow content\">\n                                <h1>Coming soon...</h1>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Layout>\n        );\n    }\n}\n\nexport default Article","import React, { Component } from 'react'\nimport Layout from '../layout/Layout'\n\nclass Work extends Component {\n\n    render() {\n\n    return(\n        <Layout>\n            <section className=\"hero\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <div className=\"columns is-vcentered is-centered is-text-centered\">\n                            <div className=\"column is-half is-narrow content\">\n                                <h1>Coming soon...</h1>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Layout>\n        );\n    }\n}\n\nexport default Work","import React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from '../components/Home'\nimport About from '../components/About'\nimport Contact from '../components/Contact'\nimport Article from '../components/Article'\nimport Work from '../components/Work'\n\nfunction App() {\n\n      return (<Router>\n                  <Switch>\n                        <Route exact path='/' component={ Home }></Route>      \n                        <Route path='/me' component={ Home }></Route>\n                        <Route path='/about' component={ About }></Route>\n                        <Route path='/works' component={ Work }></Route>\n                        <Route path='/contact' component={ Contact }></Route>\n                        <Route path='/articles' component={ Article }></Route>\n                  </Switch>\n      </Router>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}